def solution(str1, str2):
    answer = 0
    str1=str1.lower()
    str2=str2.lower()
    new_string=''
    str1_jarcard=[]
    str2_jarcard=[]
    sum_jarcard=[]
    count_common_jarcard=0
    count_sum_jarcard=0
    for i in range(0,len(str1)-1):
        for k in range(i,i+2):
            if(str1[k].isalpha()):
                new_string+=str1[k]
            else:
                break
        if(len(new_string)==2):
            str1_jarcard.append(new_string)
        new_string=''
        
    for i in range(0,len(str2)-1):
        for k in range(i,i+2):
            if(str2[k].isalpha()):
                new_string+=str2[k]
            else:
                break
        if(len(new_string)==2):
            str2_jarcard.append(new_string)
        new_string=''
    sum_jarcard=list(set(str1_jarcard+str2_jarcard))
    for k in range(0,len(sum_jarcard)):
        if sum_jarcard[k] in str1_jarcard and sum_jarcard[k] in str2_jarcard:
            count_common_jarcard+=min(str1_jarcard.count(sum_jarcard[k]),str2_jarcard.count(sum_jarcard[k]))
            count_sum_jarcard+=max(str1_jarcard.count(sum_jarcard[k]),str2_jarcard.count(sum_jarcard[k]))        
        elif sum_jarcard[k] in str1_jarcard and sum_jarcard[k] not in str2_jarcard:
            count_sum_jarcard+=str1_jarcard.count(sum_jarcard[k])
        else:
            count_sum_jarcard+=str2_jarcard.count(sum_jarcard[k])
    if(count_sum_jarcard==0):
        return 65536
    else:
        answer=int(count_common_jarcard/count_sum_jarcard*65536)
    return answer
