def solution(m, musicinfos):
    answer = []
    playing_time=[]
    m=changecode(m)
    for i in range(0,len(musicinfos)):
        melody=''
        comparing_melody=''
        playing_time.append(calculatingTime(musicinfos,i))
        comparing_melody=changecode(musicinfos[i].split(',')[3])
        if(playing_time[i]<len(musicinfos[i].split(','))):
            melody=comparing_melody[0:playing_time[i]]
        else:
            melody+=(comparing_melody*(playing_time[i]//len(comparing_melody)))
            melody+=comparing_melody[0:(playing_time[i]%len(comparing_melody))]    
        if m in melody:
            answer.append(musicinfos[i].split(',')[2])
            
    if len(answer) !=0:
        answer=sorted(answer,key=lambda x:len(x[0]))
        return answer[0]
    else:
        return "(None)"
            
def calculatingTime(musicinfos,index):
    if(int((musicinfos[index].split(',')[1])[3:])<int((musicinfos[index].split(',')[0])[3:])):
        hour=int((musicinfos[index].split(',')[1])[0:2])-int((musicinfos[index].split(',')[0])[0:2])
        minute=int((musicinfos[index].split(',')[1])[3:])-int((musicinfos[index].split(',')[0])[3:])
        hour-=1
        minute+=60
    else:
        hour=int((musicinfos[index].split(',')[1])[0:2])-int((musicinfos[index].split(',')[0])[0:2])
        minute=int((musicinfos[index].split(',')[1])[3:])-int((musicinfos[index].split(',')[0])[3:])
    return (60*hour + minute)
    
def changecode(code):
    code=code.replace('C#','c')
    code=code.replace('D#','d')
    code=code.replace('F#','f')
    code=code.replace('G#','g')
    code=code.replace('A#','a')
    return code
    
    
    
    
m="CC#BCC#BCC#BCC#B"
musicinfos=['03:00,03:30,FOO,CC#B','04:00,04:08,BAR,CC#BCC#BCC#B']
solution(m,musicinfos)
